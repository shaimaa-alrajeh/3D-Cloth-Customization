/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/solid_color_formal_pant.glb -o src/canvas/pant.jsx 
*/

// import React from 'react'
// import { useGLTF } from '@react-three/drei'

// export function Model(props) {
//   const { nodes, materials } = useGLTF('/solid_color_formal_pant.glb')
//   return (
//     <group {...props} dispose={null}>
//       <group rotation={[-Math.PI / 2, 0, 0]}>
//         <mesh geometry={nodes.Object_2.geometry} material={materials.Material369563} />
//         <mesh geometry={nodes.Object_3.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
//         <mesh geometry={nodes.Object_4.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
//         <mesh geometry={nodes.Object_5.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
//         <mesh geometry={nodes.Object_6.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
//         <mesh geometry={nodes.Object_7.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('/solid_color_formal_pant.glb')


// import React from 'react'
// import * as THREE from 'three';
// import { easing } from 'maath';
// import { useSnapshot } from 'valtio';
// import { useFrame, useThree } from '@react-three/fiber';
// import { Decal, useGLTF, useTexture, OrbitControls } from '@react-three/drei';

// import state from '../store';

// const Pant = () => {
//   const snap = useSnapshot(state);
//   const { nodes, materials } = useGLTF('/solid_color_formal_pant.glb');

//   const logoTexture = useTexture(snap.frontLogoDecal);
//   const fullTexture = useTexture(snap.fullDecal);
//   const backLogoTexture = useTexture(snap.backLogoDecal);

//   useFrame((state, delta) => easing.dampC(materials.lambert1.color, snap.color, 0.25, delta));

//   const stateString = JSON.stringify(snap);

//   const createTextTexture = (text, font, size, color) => {
//     const canvas = document.createElement('canvas');
//     const ctx = canvas.getContext('2d');
//     ctx.font = `${size}px ${font}`;
//     const textWidth = ctx.measureText(text).width;
//     canvas.width = textWidth;
//     canvas.height = size;
//     ctx.fillStyle = color;
//     ctx.font = `${size}px ${font}`;
//     ctx.fillText(text, 0, size);
//     return new THREE.CanvasTexture(canvas);
//   }

//   return (
//     <>
//       <OrbitControls />
//       <group key={stateString}>
//         <mesh
//           geometry={nodes.Object_2.geometry}
//           material={materials.Material369563}
//           // material-roughness={0}
//           material-metalness={0.1}
//           dispose={null}
//         >
//           {snap.isFullTexture && (
//             <Decal
//               position={[0, 0, 0]}
//               rotation={[0, 0, 0]}
//               scale={1}
//               map={fullTexture}
//               depthTest={false}
//               depthWrite={true}
//             />
//           )}

//           {snap.isFrontLogoTexture && (
//               <Decal
//                 position={snap.frontLogoPosition}
//                 rotation={[0, 0, 0]}
//                 scale={snap.frontLogoScale}
//                 map={logoTexture}
//                 map-anisotropy={16}
//                 depthTest={false}
//                 depthWrite={true}
//               />
//           )}
//           {snap.isFrontText && (
//           <Decal
//             position={snap.frontTextPosition}
//             rotation={snap.frontTextRotation}
//             scale={snap.frontTextScale}
//             map={createTextTexture(snap.frontText, snap.frontTextFont, snap.frontTextSize, snap.frontTextColor)}
//           />
//           )}

//           {snap.isBackLogoTexture && (
//             <Decal
//               position={snap.backLogoPosition}
//               rotation={snap.backLogoRotation}
//               scale={snap.backLogoScale}
//               map={backLogoTexture}
//               map-anisotropy={16}
//               depthTest={false}
//               depthWrite={true}
//             />
//           )}
//           {snap.isBackText && (
//             <Decal
//               position={snap.backTextPosition}
//               rotation={snap.backTextRotation}
//               scale={snap.backTextScale}
//               map={createTextTexture(snap.backText, snap.backTextFont, snap.backTextSize, snap.backTextColor)}
//             />
//           )}
//         </mesh>
//       </group>
//     </>

//   );
// }

// export default Pant
import React from 'react';
import * as THREE from 'three';
import { useSnapshot } from 'valtio';
import { useFrame } from '@react-three/fiber';
import { Decal, useGLTF, useTexture, OrbitControls } from '@react-three/drei';

import state from '../store';

const Pant = () => {
  const snap = useSnapshot(state);

  const { nodes, materials } = useGLTF('/solid_color_formal_pant.glb');

  const logoTexture = useTexture(snap.frontLogoDecal);
  const fullTexture = useTexture(snap.fullDecal);
  const backLogoTexture = useTexture(snap.backLogoDecal);

  useFrame((_, delta) =>
    materials.Material369563 &&
    (materials.Material369563.color.lerp(new THREE.Color(snap.color), 0.1 * delta))
  );

  const createTextTexture = (text, font, size, color) => {
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    ctx.font = `${size}px ${font}`;
    const textWidth = ctx.measureText(text).width;
    canvas.width = textWidth;
    canvas.height = size;
    ctx.fillStyle = color;
    ctx.font = `${size}px ${font}`;
    ctx.fillText(text, 0, size);
    return new THREE.CanvasTexture(canvas);
  };

  return (
    <>
      <OrbitControls />
      <group rotation={[-Math.PI / 2, 0, 0]} dispose={null}>
        <mesh
          geometry={nodes.Object_2.geometry}
          material={materials.Material369563}
          material-metalness={0.1}
        >
          {snap.isFullTexture && (
            <Decal
              position={[0, 0, 0]}
              rotation={[0, 0, 0]}
              scale={1}
              map={fullTexture}
              depthTest={false}
              depthWrite={true}
            />
          )}

          {snap.isFrontLogoTexture && (
            <Decal
              position={snap.frontLogoPosition}
              rotation={[0, 0, 0]}
              scale={snap.frontLogoScale}
              map={logoTexture}
              depthTest={false}
              depthWrite={true}
            />
          )}
          {snap.isFrontText && (
            <Decal
              position={snap.frontTextPosition}
              rotation={snap.frontTextRotation}
              scale={snap.frontTextScale}
              map={createTextTexture(
                snap.frontText,
                snap.frontTextFont,
                snap.frontTextSize,
                snap.frontTextColor
              )}
            />
          )}
        </mesh>
        <mesh geometry={nodes.Object_3.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
        <mesh geometry={nodes.Object_4.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
        <mesh geometry={nodes.Object_5.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
        <mesh geometry={nodes.Object_6.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
        <mesh geometry={nodes.Object_7.geometry} material={materials.W_Twill_98_Ctn_2Spa_260GSM_H_DF22018_FRONT_2641} />
      </group>
    </>
  );
};

export default Pant;
